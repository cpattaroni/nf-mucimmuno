Proceeding with single-core trimming (user-defined)
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.9
single-core operation.
igzip command line interface 2.31.0
igzip detected. Using igzip for decompressing

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> KT_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
smallRNA	0	TGGAATTCTCGG	2000	0.00
Illumina	0	AGATCGGAAGAGC	2000	0.00
Nextera	0	CTGTCTCTTATA	2000	0.00
Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0, count Nextera: 0)
Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).

Writing report to 'KT_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: KT_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j 1
Writing final adapter and quality trimmed output to KT_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file KT_1.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.2
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC KT_1.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.014 s (6.914 µs/read; 8.68 M reads/minute).

=== Summary ===

Total reads processed:                   2,000
Reads with adapters:                       132 (6.6%)
Reads written (passing filters):         2,000 (100.0%)

Total basepairs processed:       120,000 bp
Quality-trimmed:                     226 bp (0.2%)
Total written (filtered):        119,624 bp (99.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 132 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 31.1%
  C: 19.7%
  G: 10.6%
  T: 38.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	120	500.0	0	120
2	8	125.0	0	8
3	2	31.2	0	2
4	2	7.8	0	2

RUN STATISTICS FOR INPUT FILE: KT_1.fastq.gz
=============================================
2000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'KT_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: KT_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j -j 1
Writing final adapter and quality trimmed output to KT_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file KT_2.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.2
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC KT_2.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.031 s (15.514 µs/read; 3.87 M reads/minute).

=== Summary ===

Total reads processed:                   2,000
Reads with adapters:                       866 (43.3%)
Reads written (passing filters):         2,000 (100.0%)

Total basepairs processed:       156,000 bp
Quality-trimmed:                     305 bp (0.2%)
Total written (filtered):        154,568 bp (99.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 866 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 48.7%
  C: 19.7%
  G: 12.4%
  T: 19.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	676	500.0	0	676
2	135	125.0	0	135
3	40	31.2	0	40
4	14	7.8	0	14
5	1	2.0	0	1

RUN STATISTICS FOR INPUT FILE: KT_2.fastq.gz
=============================================
2000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files KT_1_trimmed.fq.gz and KT_2_trimmed.fq.gz
file_1: KT_1_trimmed.fq.gz, file_2: KT_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: KT_1_trimmed.fq.gz and KT_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to KT_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to KT_2_val_2.fq.gz

Total number of sequences analysed: 2000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 0 (0.00%)


  >>> Now running FastQC on the validated data KT_1_val_1.fq.gz<<<

application/gzip
Started analysis of KT_1_val_1.fq.gz
Approx 50% complete for KT_1_val_1.fq.gz
Approx 100% complete for KT_1_val_1.fq.gz
Analysis complete for KT_1_val_1.fq.gz

  >>> Now running FastQC on the validated data KT_2_val_2.fq.gz<<<

application/gzip
Started analysis of KT_2_val_2.fq.gz
Approx 50% complete for KT_2_val_2.fq.gz
Approx 100% complete for KT_2_val_2.fq.gz
Analysis complete for KT_2_val_2.fq.gz
Deleting both intermediate output files KT_1_trimmed.fq.gz and KT_2_trimmed.fq.gz

====================================================================================================

